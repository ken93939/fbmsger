/***********
	Project Vera Test Messenger
	Widget Custom scripts
	(c) 2016 Cathay Pacific Airways Ltd.
***********/

/*TESTING*/
//makeWidget("confirm", "This is some text to confirm", "today", ".chat-window");
//makeWidget("single-select-list", ["Item 1", "Item 2", "Item 3", "Item 4"], "today", ".chat-window");
//makeWidget("date", "", "today", ".chat-window");
// makeWidget("confirm", "This message is generated by newMakeWidget()", "23.05.2016");
// makeWidget("single-select", ["1", "2", "3", "4"], "23.05.2016");
// makeWidget("date", "", "23.05.2016");


// INIT Functions
function init() {

  	socket.on('callbackWidget', function (type, data, time, typing, delay) {
		   // alert('in callbackWidget window..' +data);
		if (!delay)
			delay = 0;

    	setTimeout(function() {
		   makeWidget(type,data,time);
	    }, delay);

  	});


  // 	socket.on('killWidget', function () {
		// // alert('in killWidget window..' );
		// destroyClosestWidget();
  // 	});


  	socket.on('selectWidget', function (widget_type, widget_selector, selection_index) {
		// alert('in selectWidget' +  widget_type +"num"+ widget_selector);
		triggerWidgetSelectionState(widget_type, widget_selector, selection_index)
  	});
}


function Widget(type, data, timestamp) {
	this.type = type;
  	this.data = data;
  	this.id = "widget-" + $('[id^="widget-"]').length.toString();
  	this.response = {};
  	this.timestamp = timestamp;
  	this.processWidgetData = processWidgetData;
  	this.renderWidget = renderWidget;
  	this.widgetCallback = widgetCallback;
}

function WidgetFrame(content, widget_frame_class, confirm) {

	if (typeof(widget_frame_class)==='undefined') widget_frame_class = "";
	if (typeof(confirm)==='undefined') confirm = "";

  	this.class = widget_frame_class;
  	this.content = content;
  	this.confirm = "";
  	if (confirm != "") {
  		this.confirm = '<div class="cta confirm"><p>' + confirm + '</p></div>';
  	}
  	this.html = 
  			'<div class="widget-frame unselected ' + this.class + '">' +
            '<div class="widget-frame-l"></div>' +
            '<div class="widget-frame-c">' +
            '<div class="content">' +
            this.content +
            this.confirm +
            '</div><!-- /.content -->' +
    		'</div><!-- /.widget-frame-c -->' +
    		'<div class="widget-frame-r"></div>' +
    		'</div><!-- /.widget-frame -->';
}

function makeWidget(widget_type, data, chat_message_timestamp) { 
    destroyActiveDateWidget();
	//Create new widget
	var widget = new Widget(widget_type, data, chat_message_timestamp);

	//Process widget data
	widget.processWidgetData();

	//Process widget data
	widget.renderWidget();

	//Add callback
	widgetCallback(widget);
}

function processWidgetData() {
	//console.log("widget.processWidgetData() called");
}

function renderWidget() {
	//create widget structure
	var widget_output =
			'<div class="widget ' + this.type + '">' +
			'</div><!-- /.widget -->';

	manageChatWindow(widget_output, this.timestamp, ".chat-window", "user", false, this.id);

	var datepicker_html = '<div id="datepicker" data-date="today"></div><span class="date-label-selected"></span>';
    var cta_confirm = '<div class="cta confirm"><p>Confirm</p></div>';
	
	switch (this.type) {
		case "confirm":
			var widget_frame = new WidgetFrame(this.data, "", "Confirm");
			$("#" + this.id).find('.widget').append(widget_frame.html);
			break;
		case "single-select-list":
			for (i in this.data) {
				widget_frame_class = "frame-index-" + i.toString();
    			var widget_frame = new WidgetFrame(this.data[i], widget_frame_class, "");
				$("#" + this.id).find('.widget').append(widget_frame.html);
    		}
			break;
		case "date":
			var widget_frame = new WidgetFrame(datepicker_html, "", "Confirm");
			$("#" + this.id).find('.widget').append(widget_frame.html);
			$('#datepicker').datepicker({
    			date: 'today',
    			startDate: 'today'
			});
			break;
	}
}

function widgetCallback(widget) {
	//Standard widget response object contains {data, response}
	widget.response.data = widget.data;
	widget.id = "#" + widget.id;

	switch (widget.type) {
		case "confirm":
			$(widget.id + " .cta.confirm" ).click(function() {
	  			widget.response.response = true;
	  			
	  			//Update UI
	  			$(widget.id + " .widget-frame").removeClass('unselected').addClass('selected');	  			
	  			socket.emit('sendchat', widget.response, "confirmWidget");
	  		});
			break;
		case "single-select-list":
			$(document).on('click', widget.id + " .widget-frame.unselected", function(e){
	  			index = $.grep(this.className.split(" "), function(v, i){
	  				return v.indexOf('frame-index') === 0;
	   			}).join().match(/\d+/)[0];
	  			widget.response.response = index;

	  			//Update UI
	  			$(this).removeClass('unselected').addClass('selected choice');
				$(widget.id).find('.widget-frame.unselected').removeClass('unselected').addClass('selected');	  			
	  			socket.emit('sendchat', widget.response, "flightPickerWidget");
			});
			break;
		case "date":
			$(widget.id + " .cta.confirm" ).click(function() {
				var date = $(datepicker).datepicker('getUTCDate');
	  			widget.response.response = date;

	  			//Update UI
	  			$(widget.id + " .widget-frame").removeClass('unselected').addClass('selected');
				$(datepicker).hide('slow', function(){ $(datepicker).remove(); })
				$(widget.id + " .date-label-selected").html(moment(date).format('dddd, MMMM DD, YYYY'));

				socket.emit('sendchat', widget.response, "datePickerWidget");
	  		});
			break;
	}
}

function triggerWidgetSelectionState(widget_type, widget_selector, selection_index) {
	//selection_index is optional
	//We really need to comment code ;)


	switch (widget_type) {
		case "confirm":
			$(widget_selector + " .widget-frame").removeClass('unselected').addClass('selected');	 
			break;
		case "single-select-list":
			if (typeof(selection_index)==='undefined') selection_index = 0;
			$(widget_selector + " .frame-index-" + selection_index.toString() + ".unselected").removeClass('unselected').addClass('selected choice');
			$(widget_selector).find('.widget-frame.unselected').removeClass('unselected').addClass('selected');	  			
			break;
		case "date":
			if (typeof(selection_index) != 'undefined'){
				date = selection_index;
			} else {
				date = $(datepicker).datepicker('getUTCDate');
			}
			$(widget_selector + " .widget-frame").removeClass('unselected').addClass('selected');
			$(datepicker).hide('slow', function(){ $(datepicker).remove(); })
			$(widget_selector + " .date-label-selected").html(moment(date).format('dddd, MMMM DD, YYYY'));
			break;
	}
}

function destroyActiveDateWidget() {

	try{
		var widgetName = $( '[id^="widget-"]' ).last().attr('id');
		var widgetDateClass = document.getElementById(widgetName).getElementsByClassName("widget");
        var re_widgetDateClassName = new RegExp( "date", "gi" );
        var widgetDateClassName = widgetDateClass[0].className;

		var widgetClass = document.getElementById(widgetName).getElementsByClassName("widget-frame");
		var widgetClassName = widgetClass[0].className;
		var re_widgetClassName = new RegExp( "unselected", "gi" );

		if((widgetClassName.match(re_widgetClassName))&&(widgetDateClassName.match(re_widgetDateClassName))){
			// alert('unselected');
			$( '[id^="widget-"]' ).last().remove();
		}else{
			// alert('select');
		}
	} catch (err){
		console.log(err);
	}
}